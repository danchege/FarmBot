name: Full Stack Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  backend-deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: farmbot-backend/package-lock.json
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
    
    - name: Install dependencies
      run: |
        cd farmbot-backend
        pnpm install --frozen-lockfile
    
    - name: Run backend tests
      run: |
        cd farmbot-backend
        pnpm test || echo "No test script found"
    
    - name: Build backend
      run: |
        cd farmbot-backend
        pnpm run build || echo "No build script found"
    
    - name: Deploy Backend to Render
      env:
        RENDER_TOKEN: ${{ secrets.RENDER_TOKEN }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        echo "Backend deployment triggered on Render"
        # Render auto-deploys on push to main branch
    
    - name: Wait for backend deployment
      run: |
        echo "Waiting for backend to be ready..."
        sleep 60

  frontend-deploy:
    needs: backend-deploy
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: farmbot-frontend/package-lock.json
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
    
    - name: Install dependencies
      run: |
        cd farmbot-frontend
        pnpm install --frozen-lockfile
    
    - name: Run frontend tests
      run: |
        cd farmbot-frontend
        pnpm test --watchAll=false --passWithNoTests
    
    - name: Build frontend
      run: |
        cd farmbot-frontend
        pnpm run build
    
    - name: Deploy Frontend to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./farmbot-frontend
        vercel-args: '--prod'

  health-check:
    needs: [backend-deploy, frontend-deploy]
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Health check backend
      run: |
        echo "Checking backend health..."
        # Add actual health check logic here
        # curl -f ${{ secrets.BACKEND_URL }}/health || exit 1
    
    - name: Health check frontend
      run: |
        echo "Checking frontend health..."
        # Add actual health check logic here
        # curl -f ${{ secrets.FRONTEND_URL }} || exit 1
    
    - name: Notify deployment success
      run: |
        echo "üöÄ Full stack deployment completed successfully!"
        echo "Backend: ${{ secrets.BACKEND_URL }}"
        echo "Frontend: ${{ secrets.FRONTEND_URL }}"

  notify:
    needs: health-check
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.health-check.result }}" == "success" ]; then
          echo "‚úÖ Deployment successful"
        else
          echo "‚ùå Deployment failed"
          exit 1
        fi 